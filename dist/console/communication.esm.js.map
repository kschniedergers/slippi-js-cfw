{"version":3,"file":"communication.esm.js","sources":["../../src/console/communication.ts"],"sourcesContent":["import { decode, encode } from \"@shelacek/ubjson\";\n\nexport enum CommunicationType {\n  HANDSHAKE = 1,\n  REPLAY = 2,\n  KEEP_ALIVE = 3,\n}\n\nexport type CommunicationMessage = {\n  type: CommunicationType;\n  payload: {\n    cursor: Uint8Array;\n    clientToken: Uint8Array;\n    pos: Uint8Array;\n    nextPos: Uint8Array;\n    data: Uint8Array;\n    nick: string | null;\n    forcePos: boolean;\n    nintendontVersion: string | null;\n  };\n};\n\n// This class is responsible for handling the communication protocol between the Wii and the\n// desktop app\nexport class ConsoleCommunication {\n  private receiveBuf = Buffer.from([]);\n  private messages = new Array<CommunicationMessage>();\n\n  public receive(data: Buffer): void {\n    this.receiveBuf = Buffer.concat([this.receiveBuf, data]);\n\n    while (this.receiveBuf.length >= 4) {\n      // First get the size of the message we are expecting\n      const msgSize = this.receiveBuf.readUInt32BE(0);\n\n      if (this.receiveBuf.length < msgSize + 4) {\n        // If we haven't received all the data yet, let's wait for more\n        return;\n      }\n\n      // Here we have received all the data, so let's decode it\n      const ubjsonData = this.receiveBuf.slice(4, msgSize + 4);\n      this.messages.push(decode(ubjsonData));\n\n      // Remove the processed data from receiveBuf\n      this.receiveBuf = this.receiveBuf.slice(msgSize + 4);\n    }\n  }\n\n  public getReceiveBuffer(): Buffer {\n    return this.receiveBuf;\n  }\n\n  public getMessages(): Array<CommunicationMessage> {\n    const toReturn = this.messages;\n    this.messages = [];\n\n    return toReturn;\n  }\n\n  public genHandshakeOut(cursor: Uint8Array, clientToken: number, isRealtime = false): Buffer {\n    const clientTokenBuf = Buffer.from([0, 0, 0, 0]);\n    clientTokenBuf.writeUInt32BE(clientToken, 0);\n\n    const message = {\n      type: CommunicationType.HANDSHAKE,\n      payload: {\n        cursor: cursor,\n        clientToken: Uint8Array.from(clientTokenBuf), // TODO: Use real instance token\n        isRealtime: isRealtime,\n      },\n    };\n\n    const buf = encode(message, {\n      optimizeArrays: true,\n    });\n\n    const msg = Buffer.concat([Buffer.from([0, 0, 0, 0]), Buffer.from(buf)]);\n\n    msg.writeUInt32BE(buf.byteLength, 0);\n\n    return msg;\n  }\n}\n"],"names":["CommunicationType","ConsoleCommunication","constructor","receiveBuf","Buffer","from","messages","Array","receive","data","concat","length","msgSize","readUInt32BE","ubjsonData","slice","push","decode","getReceiveBuffer","getMessages","toReturn","genHandshakeOut","cursor","clientToken","isRealtime","clientTokenBuf","writeUInt32BE","message","type","HANDSHAKE","payload","Uint8Array","buf","encode","optimizeArrays","msg","byteLength"],"mappings":";;IAEYA,kBAIX;AAJD,CAAA,UAAYA,iBAAiB,EAAA;EAC3BA,iBAAA,CAAAA,iBAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAa,CAAA;EACbA,iBAAA,CAAAA,iBAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU,CAAA;EACVA,iBAAA,CAAAA,iBAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAc,CAAA;AAChB,CAAC,EAJWA,iBAAiB,KAAjBA,iBAAiB,GAI5B,EAAA,CAAA,CAAA,CAAA;AAgBD;AACA;MACaC,oBAAoB,CAAA;EAAAC,WAAA,GAAA;AAAA,IAAA,IAAA,CACvBC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAAC,EAAE,CAAC,CAAA;AAAA,IAAA,IAAA,CAC5BC,QAAQ,GAAG,IAAIC,KAAK,EAAwB,CAAA;AAAA,GAAA;EAE7CC,OAAOA,CAACC,IAAY,EAAA;AACzB,IAAA,IAAI,CAACN,UAAU,GAAGC,MAAM,CAACM,MAAM,CAAC,CAAC,IAAI,CAACP,UAAU,EAAEM,IAAI,CAAC,CAAC,CAAA;AAExD,IAAA,OAAO,IAAI,CAACN,UAAU,CAACQ,MAAM,IAAI,CAAC,EAAE;AAClC;MACA,MAAMC,OAAO,GAAG,IAAI,CAACT,UAAU,CAACU,YAAY,CAAC,CAAC,CAAC,CAAA;MAE/C,IAAI,IAAI,CAACV,UAAU,CAACQ,MAAM,GAAGC,OAAO,GAAG,CAAC,EAAE;AACxC;AACA,QAAA,OAAA;AACD,OAAA;AAED;AACA,MAAA,MAAME,UAAU,GAAG,IAAI,CAACX,UAAU,CAACY,KAAK,CAAC,CAAC,EAAEH,OAAO,GAAG,CAAC,CAAC,CAAA;MACxD,IAAI,CAACN,QAAQ,CAACU,IAAI,CAACC,MAAM,CAACH,UAAU,CAAC,CAAC,CAAA;AAEtC;AACA,MAAA,IAAI,CAACX,UAAU,GAAG,IAAI,CAACA,UAAU,CAACY,KAAK,CAACH,OAAO,GAAG,CAAC,CAAC,CAAA;AACrD,KAAA;AACH,GAAA;AAEOM,EAAAA,gBAAgBA,GAAA;IACrB,OAAO,IAAI,CAACf,UAAU,CAAA;AACxB,GAAA;AAEOgB,EAAAA,WAAWA,GAAA;AAChB,IAAA,MAAMC,QAAQ,GAAG,IAAI,CAACd,QAAQ,CAAA;IAC9B,IAAI,CAACA,QAAQ,GAAG,EAAE,CAAA;AAElB,IAAA,OAAOc,QAAQ,CAAA;AACjB,GAAA;EAEOC,eAAeA,CAACC,MAAkB,EAAEC,WAAmB,EAAEC,UAAU,GAAG,KAAK,EAAA;AAChF,IAAA,MAAMC,cAAc,GAAGrB,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;AAChDoB,IAAAA,cAAc,CAACC,aAAa,CAACH,WAAW,EAAE,CAAC,CAAC,CAAA;AAE5C,IAAA,MAAMI,OAAO,GAAG;MACdC,IAAI,EAAE5B,iBAAiB,CAAC6B,SAAS;AACjCC,MAAAA,OAAO,EAAE;AACPR,QAAAA,MAAM,EAAEA,MAAM;AACdC,QAAAA,WAAW,EAAEQ,UAAU,CAAC1B,IAAI,CAACoB,cAAc,CAAC;AAC5CD,QAAAA,UAAU,EAAEA,UAAAA;AACb,OAAA;KACF,CAAA;AAED,IAAA,MAAMQ,GAAG,GAAGC,MAAM,CAACN,OAAO,EAAE;AAC1BO,MAAAA,cAAc,EAAE,IAAA;AACjB,KAAA,CAAC,CAAA;AAEF,IAAA,MAAMC,GAAG,GAAG/B,MAAM,CAACM,MAAM,CAAC,CAACN,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAED,MAAM,CAACC,IAAI,CAAC2B,GAAG,CAAC,CAAC,CAAC,CAAA;IAExEG,GAAG,CAACT,aAAa,CAACM,GAAG,CAACI,UAAU,EAAE,CAAC,CAAC,CAAA;AAEpC,IAAA,OAAOD,GAAG,CAAA;AACZ,GAAA;AACD;;;;"}